version: '3.7'

services:
  api01: # API - Instância 01
    build:
      context: .
      dockerfile: api/.docker/php/Dockerfile
    restart: on-failure
    hostname: api01
    #network_mode: host
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      #PHP_FPM_PORT: 9001
    depends_on:
      - db
    user: 1000:1000
    volumes:
      - "./api/app:/usr/src/api/app"
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '0.7GB'

  api02: # API - Instância 02
    build:
      context: .
      dockerfile: api/.docker/php/Dockerfile
    restart: on-failure
    #network_mode: host
    hostname: api02
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      #PHP_FPM_PORT: 9000
    depends_on:
      - db
    user: 1000:1000
    volumes:
      - "./api/app:/usr/src/api/app"
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '0.7GB'

  nginx: # Load Balancer
    image: nginx:1.15.3-alpine
    volumes:
      - "./api/app/public/:/usr/src/api/app"
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
       - "9999:9999"
    #network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.4GB'

  db: # Banco de dados
    image: mysql:8.0
    hostname: db
    #network_mode: host
    command: [ "--max_connections=500" ]
    environment:
      MYSQL_ROOT_PASSWORD: root 
      MYSQL_DATABASE: rinhadb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./api/.docker/mysql/my.conf:/etc/mysql/my.cnf
    ports:
       - 3306:3306
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '1GB'

networks:
  default:
    driver: bridge
    name: rinha